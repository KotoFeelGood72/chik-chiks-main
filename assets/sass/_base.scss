//------------------------------------------------------------base styles
:root {
	--full-screen: calc(var(--vh, 1vh) * 100);
}

html {
	height: 100%;
	font: 400 calc(100vw / 1920 * 10)/1.33 $font_1;
	scroll-behavior: smooth;
	user-select: none;
	&.active {
		overflow: hidden;
	}
	@include bp($point_2) {
		font-size: 10px;
	}
}

body {
	position: relative;

	display: flex;
	height: 100%;

	font-size: $font_size_base;
	color: $color_text_base;

	-webkit-text-size-adjust: none;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;


	&.is-hidden {
		overflow: hidden;
	}

	background: $body_bg;
	@include bp($point_2) {
		font-size: 1.6rem;
	}

	@supports (display: grid) {
		display: block;
	}
}

.wrapper {
	position: relative;

	width: 100%;
	display: flex;
	flex-direction: column;
	min-height: 100%;
	height: auto !important;

	// overflow-x: hidden;
}

.base {
	width: 100%;
	position: relative;
	padding: $header 0 0;
	flex: 1 0 auto;
	@include bp($point_2) {
		padding: $header_mob 0 0;
	}
	@include bp($point_2, $direction:min) {
		padding: 12.2rem 0 0;
	}
}

a {
	text-decoration: none;
	color: $color_link_base;

	&:hover,
	&:focus {
		text-decoration: none;
	}

}

.elements_list {
	padding: 3rem;
}

//------------------------------------------------------------base styles###


.no_padding {
	padding-top: 0;
}

// .widget_wrap {
// 	display: none!important;
// }


.loader {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	@include flex-center;
	@include z-index(popup);
	background-color: #FFC120;
	opacity: 1;
	visibility: visible;
	transition: all .3s ease;
	&.is-hidden {
		opacity: 0;
		visibility: 
		hidden;
	}
	
}
.loader svg {
	width: 100%;
	max-width: 10rem;
	animation: rotate 3.6s linear infinite;
}

circle {
	fill: none;
	stroke: white;
	stroke-width: 8px;
	stroke-dasharray: 300;
	animation: outline 2s cubic-bezier(0.77,0,0.18,1) infinite;
}

@keyframes outline {
	0% {
		stroke-dashoffset: 0;
	}
	50% {
		stroke-dashoffset: 300;
	}
	100% {
		stroke-dashoffset: 600;
	}
}

@keyframes rotate {
	from {
		transform: rotate(0turn);
	}
	to {
		transform: rotate(-1turn);
	}
}